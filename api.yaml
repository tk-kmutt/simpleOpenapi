openapi: 3.0.3
info:
  version: 0.0.1
  title: simple open api
  description: simple api service for lecture
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:1232
paths:
  /pets:
    get:
      description: |
        Returns all pets from the system that the user has access to
        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.

        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
      operationId: findPets
      parameters:
        - $ref: "#/components/parameters/PetTags"
        - $ref: "#/components/parameters/Order"
        - $ref: "#/components/parameters/Limit"
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PetResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new pet in the store. Duplicates are allowed
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: findPetById
      parameters:
        - $ref: "#/components/parameters/ID"
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - $ref: "#/components/parameters/ID"
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /amazons:
    get:
      description: get all amazons
      operationId: findAmazons
      parameters:
        - $ref: "#/components/parameters/Order"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Page"
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AmazonResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: create amazon
      operationId: createAmazon
      requestBody:
        description: to amazon create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amazon'
      responses:
        '200':
          description: amazon response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmazonResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /amazons/{key}:
    get:
      description: get amazon by key
      operationId: findAmazonByKey
      parameters:
        - $ref: "#/components/parameters/Key"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmazonResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: update amazon
      operationId: updateAmazon
      parameters:
        - $ref: "#/components/parameters/Key"
      requestBody:
        description: to amazon update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonUpdate'
      responses:
        '200':
          description: amazon response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmazonResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: patch amazon
      operationId: patchAmazon
      parameters:
        - $ref: "#/components/parameters/Key"
      requestBody:
        description: to amazon patch
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonPatch'
      responses:
        '200':
          description: amazon response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmazonResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: delete amazon
      operationId: deleteAmazon
      parameters:
        - $ref: "#/components/parameters/Key"
      responses:
        '204':
          description: amazon deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /amazons/inactive/{key}:
    patch:
      description: inactive amazon
      operationId: inactiveAmazon
      parameters:
        - $ref: "#/components/parameters/Key"
      responses:
        '204':
          description: amazon inactive
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /amazons/active/{key}:
    patch:
      description: active amazon
      operationId: activeAmazon
      parameters:
        - $ref: "#/components/parameters/Key"
      responses:
        '204':
          description: amazon active
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    AmazonResponse:
      allOf:
        - $ref: '#/components/schemas/Amazon'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
    Amazon:
      type: object
      required:
        - name
        - asin
        - maker
        - price
        - url
      properties:
        name:
          type: string
        asin:
          type: string
        maker:
          type: string
        price:
          type: integer
          format: int64
        url:
          type: string
        comment:
          type: string
    AmazonUpdate:
      type: object
      required:
        - name
        - maker
        - price
        - url
      properties:
        name:
          type: string
        maker:
          type: string
        price:
          type: integer
          format: int64
        url:
          type: string
        comment:
          type: string
    AmazonPatch:
      type: object
      properties:
        name:
          type: string
        maker:
          type: string
        price:
          type: integer
          format: int64
        url:
          type: string
        comment:
          type: string
    PetResponse:
      allOf:
        - $ref: '#/components/schemas/Pet'
    Pet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  parameters:
    Key:
      name: key
      in: path
      description: data key
      required: true
      schema:
        type: string
    ID:
      name: id
      in: path
      description: data key
      required: true
      schema:
        type: integer
        format: int64
    PetTags:
      name: tags
      in: query
      description: tags to filter by
      required: false
      style: form
      schema:
        type: array
        items:
          type: string
    Page:
      name: page
      in: query
      description: pager
      required: false
      schema:
        type: integer
        format: int32
    Limit:
      name: limit
      in: query
      description: maximum number of results to return
      required: false
      schema:
        type: integer
        format: int32
    Order:
      name: order
      in: query
      description: maximum number of results to return
      required: false
      schema:
        type: string
